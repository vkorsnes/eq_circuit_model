function OCV = OCV_from_SOC(SOC)
    % A simple lookuptable that does not take into 
    % consideration temperature. Also based on old testing data.
    
    soc_lut_value = [3.0316, 3.2440, 3.3374, 3.4022, 3.4521, 3.4930, ... 
        3.5277, 3.5577, 3.5840, 3.6074, 3.6284, 3.6473, 3.6642, 3.6782, ...
        3.6876, 3.6918, 3.6938, 3.6955, 3.6967, 3.6977, 3.6988, 3.6999, ...
        3.7010, 3.7023, 3.7037, 3.7056, 3.7083, 3.7119, 3.7155, 3.7188, ...
        3.7219, 3.7249, 3.7277, 3.7304, 3.7331, 3.7358, 3.7385, 3.7411, ...
        3.7437, 3.7460, 3.7481, 3.7502, 3.7521, 3.7540, 3.7560, 3.7579, ...
        3.7598, 3.7617, 3.7635, 3.7652, 3.7668, 3.7683, 3.7698, 3.7713, ...
        3.7729, 3.7745, 3.7760, 3.7774, 3.7787, 3.7798, 3.7809, 3.7817, ...
        3.7828, 3.7839, 3.7848, 3.7857, 3.7865, 3.7873, 3.7881, 3.7889, ...
        3.7898, 3.7906, 3.7915, 3.7924, 3.7934, 3.7943, 3.7953, 3.7964, ...
        3.7974, 3.7985, 3.7995, 3.8007, 3.8018, 3.8030, 3.8042, 3.8053, ...
        3.8067, 3.8080, 3.8093, 3.8107, 3.8121, 3.8135, 3.8149, 3.8164, ...
        3.8179, 3.8195, 3.8210, 3.8227, 3.8244, 3.8262, 3.8279, 3.8297, ...
        3.8315, 3.8333, 3.8352, 3.8373, 3.8394, 3.8415, 3.8437, 3.8459, ...
        3.8482, 3.8506, 3.8531, 3.8557, 3.8584, 3.8613, 3.8642, 3.8672, ...
        3.8703, 3.8737, 3.8772, 3.8809, 3.8849, 3.8891, 3.8936, 3.8980, ...
        3.9024, 3.9066, 3.9105, 3.9140, 3.9173, 3.9204, 3.9234, 3.9264, ...
        3.9293, 3.9322, 3.9351, 3.9380, 3.9409, 3.9438, 3.9467, 3.9496, ...
        3.9525, 3.9553, 3.9580, 3.9607, 3.9632, 3.9656, 3.9678, 3.9700, ...
        3.9719, 3.9738, 3.9757, 3.9778, 3.9798, 3.9820, 3.9844, 3.9872, ...
        3.9901, 3.9934, 3.9969, 4.0012, 4.0057, 4.0109, 4.0171, 4.0238, ...
        4.0316, 4.0402, 4.0492, 4.0579, 4.0655, 4.0716, 4.0767, 4.0806, ...
        4.0834, 4.0855, 4.0874, 4.0896, 4.0921, 4.0954, 4.0990, 4.1029, ...
        4.1070, 4.1113, 4.1155, 4.1200, 4.1244,	4.1288, 4.1333, 4.1378, ...
        4.1423, 4.1468, 4.1513, 4.1559, 4.1605, 4.1652, 4.1698, 4.1745, ...
        4.1793, 4.1842, 4.1891];

    soc_lut = [0,   5,   10,  15,  20,  25,  30,  35,  40,  45,  50, ...
        55,  60, 65,  70,  75,  80,  85,  90, 95,  100, 105, 110, 115, ...
        120, 125, 130, 135, 140, 145, 150, 155, 160, 165, 170, 175, ...
        180, 185, 190, 195, 200, 205, 210, 215, 220, 225, 230, 235, ...
        240, 245, 250, 255, 260, 265, 270, 275, 280, 285, 290, 295, ...
        300, 305, 310, 315, 320, 325, 330, 335, 340, 345, 350, 355, ...
        360, 365, 370, 375, 380, 385, 390, 395, 400, 405, 410, 415, ...
        420, 425, 430, 435, 440, 445, 450, 455, 460, 465, 470, 475, ...
        480, 485, 490, 495, 500, 505, 510, 515, 520, 525, 530, 535, ...
        540, 545, 550, 555, 560, 565, 570, 575, 580, 585, 590, 595, ...
        600, 605, 610, 615, 620, 625, 630, 635, 640, 645, 650, 655, ...
        660, 665, 670, 675, 680, 685, 690, 695, 700, 705, 710, 715, ... 
        720, 725, 730, 735, 740, 745, 750, 755, 760, 765, 770, 775, ...
        780, 785, 790, 795, 800, 805, 810, 815, 820, 825, 830, 835, ...
        840, 845, 850, 855, 860, 865, 870, 875, 880, 885, 890, 895, ...
        900, 905, 910, 915, 920, 925, 930, 935, 940, 945, 950, 955, ...
        960, 965, 970, 975, 980, 985, 990, 995, 1000];
    
    index = -1;
    
    for i = 2:length(soc_lut)
        previous_error = abs(SOC*1000 - soc_lut(i-1));
        next_error = abs(SOC*1000 - soc_lut(i));
        if previous_error < next_error
            index = i-1;
            break;
        else
            index = i;
        end
    end
    OCV = soc_lut_value(index);
end
    

    